# ชื่อของ Workflow ที่จะแสดงในแท็บ Actions
name: Collect Weather Data Hourly

# กำหนดเงื่อนไขที่จะให้ Workflow นี้ทำงาน
on:
  # 1. ทำให้สามารถกดรันเองได้จากหน้าเว็บเพื่อทดสอบ
  workflow_dispatch:
  # 2. ทำงานตามตารางเวลา
  schedule:
    # รันทุกๆ ชั่วโมง ที่นาทีที่ 0 (เช่น 10:00, 11:00, 12:00)
    # รูปแบบคือ 'นาที ชั่วโมง วัน เดือน วันในสัปดาห์'
    - cron: '0 * * * *'

# กำหนด "งาน" ที่จะให้ทำ
jobs:
  collect-data:
    # กำหนดให้ทำงานบนระบบปฏิบัติการเวอร์ชันล่าสุดของ Ubuntu
    runs-on: ubuntu-latest
    # ขั้นตอนการทำงาน (จะรันตามลำดับ)
    steps:
      # ขั้นตอนที่ 1: ดึงโค้ดจาก Repository ของเรามาไว้ในเครื่องเสมือน
      - name: Check out repository code
        uses: actions/checkout@v4

      # ขั้นตอนที่ 2: ตั้งค่าสภาพแวดล้อมของ Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # ขั้นตอนที่ 3: ติดตั้งไลบรารีที่จำเป็นจากไฟล์ requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ขั้นตอนที่ 4: รันสคริปต์ Python ของเรา
      - name: Run weather collection script
        # กำหนด Environment Variables ให้กับสคริปต์ โดยดึงค่ามาจาก Secrets ที่เราตั้งไว้
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          TMD_TOKEN: ${{ secrets.TMD_TOKEN }}
          TABLE_NAME: 'Weather' # สามารถใส่ค่าที่ไม่ใช่ข้อมูลลับตรงนี้ได้เลย
        # คำสั่งที่ใช้รัน
        run: python weather_script.py